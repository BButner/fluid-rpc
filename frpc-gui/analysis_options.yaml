# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "lib/src/rust"
    - "rust_builder"
  plugins:
    - custom_lint

linter:
  rules:
    - always_declare_return_types
    - always_put_required_named_parameters_first
    - always_use_package_imports
    - avoid_escaping_inner_quotes
    - avoid_redundant_argument_values
    - avoid_unused_constructor_parameters
    - avoid_void_async
    - cast_nullable_to_non_nullable
    - combinators_ordering
    - directives_ordering
    - eol_at_end_of_file
    - flutter_style_todos
    - leading_newlines_in_multiline_strings
    - missing_whitespace_between_adjacent_strings
    - no_literal_bool_comparisons
    - no_runtimeType_toString
    - noop_primitive_operations
    - one_member_abstracts
    - package_api_docs
    - package_prefixed_library_names
    - parameter_assignments
    - prefer_asserts_in_initializer_lists
    - prefer_asserts_with_message
    - prefer_constructors_over_static_methods
    - prefer_expression_function_bodies
    - prefer_final_in_for_each
    - prefer_final_locals
    - prefer_foreach
    - prefer_if_elements_to_conditional_expressions
    - prefer_mixin
    - prefer_null_aware_method_calls
    - prefer_single_quotes
    - prefer_void_to_null
    - public_member_api_docs
    - require_trailing_commas
    - sort_constructors_first
    - sort_pub_dependencies
    - sort_unnamed_constructors_first
    - tighten_type_of_initializing_formals
    - type_annotate_public_apis
    - unawaited_futures
    - unnecessary_await_in_return
    - unnecessary_breaks
    - unnecessary_lambdas
    - unnecessary_library_directive
    - unnecessary_null_aware_operator_on_extension_on_nullable
    - unnecessary_null_checks
    - unnecessary_parenthesis
    - unnecessary_raw_strings
    - unreachable_from_main
    - use_colored_box
    - use_decorated_box
    - use_enums
    - use_if_null_to_convert_nulls_to_bools
    - use_is_even_rather_than_modulo
    - use_named_constants
    - use_raw_strings
    - use_setters_to_change_properties
    - use_string_buffers

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
