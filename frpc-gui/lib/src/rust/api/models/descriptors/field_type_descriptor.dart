// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.1.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../../frb_generated.dart';
import 'enum_descriptor.dart';
import 'field_descriptor.dart';
import 'message_descriptor.dart';
import 'oneof_descriptor.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
part 'field_type_descriptor.freezed.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `fmt`, `from`

@freezed
sealed class FieldTypeDescriptor with _$FieldTypeDescriptor {
  const FieldTypeDescriptor._();

  const factory FieldTypeDescriptor.double() = FieldTypeDescriptor_Double;
  const factory FieldTypeDescriptor.float() = FieldTypeDescriptor_Float;
  const factory FieldTypeDescriptor.int32() = FieldTypeDescriptor_Int32;
  const factory FieldTypeDescriptor.int64() = FieldTypeDescriptor_Int64;
  const factory FieldTypeDescriptor.uint32() = FieldTypeDescriptor_Uint32;
  const factory FieldTypeDescriptor.uint64() = FieldTypeDescriptor_Uint64;
  const factory FieldTypeDescriptor.sint32() = FieldTypeDescriptor_Sint32;
  const factory FieldTypeDescriptor.sint64() = FieldTypeDescriptor_Sint64;
  const factory FieldTypeDescriptor.fixed32() = FieldTypeDescriptor_Fixed32;
  const factory FieldTypeDescriptor.fixed64() = FieldTypeDescriptor_Fixed64;
  const factory FieldTypeDescriptor.sfixed32() = FieldTypeDescriptor_Sfixed32;
  const factory FieldTypeDescriptor.sfixed64() = FieldTypeDescriptor_Sfixed64;
  const factory FieldTypeDescriptor.bool() = FieldTypeDescriptor_Bool;
  const factory FieldTypeDescriptor.string() = FieldTypeDescriptor_String;
  const factory FieldTypeDescriptor.bytes() = FieldTypeDescriptor_Bytes;
  const factory FieldTypeDescriptor.message(
    MessageDescriptor field0,
  ) = FieldTypeDescriptor_Message;
  const factory FieldTypeDescriptor.enum_(
    EnumDescriptor field0,
  ) = FieldTypeDescriptor_Enum;
}
